Host: onmshs
Port: 443 #set depending on TLS.Enabled and the Ingress ports, do not change
Protocol: https #set depending on TLS.Enabled, do not change
OpenShift: false
OpenNMS:
  API:
    Path: /api
    ServiceName: opennms-rest-server
    Image: opennms/horizon-stream-rest-server
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 9090
    Resources:
      Limits:
        Cpu: "2"
        Memory: 2Gi
      Requests:
        Cpu: "1"
        Memory: 1Gi
    PrivateRepoEnabled: false
  MetricsProcessor:
    ServiceName: opennms-metrics-processor
    Image: opennms/horizon-stream-metrics-processor
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 512Mi
      Requests:
        Cpu: 250m
        Memory: 256Mi
    PrivateRepoEnabled: false
  UI:
    Path: /
    ServiceName: opennms-ui
    Image: opennms/horizon-stream-ui
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    PrivateRepoEnabled: false
  Minion:
    ServiceName: opennms-minion
    Image: opennms/horizon-stream-minion
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8181
    SshPort: 8101
    TrapsListenerPort: 1162
    Netflow5ListenerPort: 8877
    Netflow9ListenerPort: 4729
    NetflowListenerPort: 9999
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
  MinionGateway:
    ServiceName: opennms-minion-gateway
    Image: opennms/horizon-stream-minion-gateway
    ImagePullPolicy: IfNotPresent
    Port: 8080
    GrpcPort: 8990
    InternalGrpcPort: 8991
    IgniteClientPort: 10800
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    IngressAnnotations:
      nginx.ingress.kubernetes.io/server-snippet: |
        listen 8990 http2;
        grpc_read_timeout "1200s";
        grpc_send_timeout "1200s";
        client_body_timeout "1200s";
      nginx.ingress.kubernetes.io/configuration-snippet: |
        grpc_set_header tenant-id 'opennms-prime';
    PrivateRepoEnabled: false

  MinionGatewayGrpcProxy:
    Enabled: true
    ServiceName: opennms-minion-gateway-grpc-proxy
    Image: opennms/horizon-stream-minion-gateway-grpc-proxy
    ImagePullPolicy: IfNotPresent
    Port: 8990
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi

  MinionSslGateway:
    Enabled: true
    ServiceName: opennms-minion-ssl-gateway
    # TODO: use the project maven property to populate this value?
    Image: nginx:1.21.6-alpine
    ImagePullPolicy: IfNotPresent
    Port: 443
    Replicas: 1
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi

  Inventory:
    ServiceName: opennms-inventory
    Image: opennms/horizon-stream-inventory
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    GrpcPort: 6565
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    EncryptionKey: ~
    PrivateRepoEnabled: false
  Alert:
    ServiceName: opennms-alert
    Image: opennms/horizon-stream-alert
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    GrpcPort: 6565
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    PrivateRepoEnabled: false
  Notification: 
    ServiceName: opennms-notifications
    Image: opennms/horizon-stream-notification
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    GrpcPort: 6565
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    PrivateRepoEnabled: false
  Events:
    ServiceName: opennms-events
    Image: opennms/horizon-stream-events
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    GrpcPort: 6565
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    PrivateRepoEnabled: false
  DataChoices:
    ServiceName: opennms-datachoices
    Image: opennms/horizon-stream-datachoices
    ImagePullPolicy: IfNotPresent
    Replicas: 1
    Port: 8080
    GrpcPort: 6565
    Resources:
      Limits:
        Cpu: "1"
        Memory: 500Mi
      Requests:
        Cpu: 100m
        Memory: 250Mi
    PrivateRepoEnabled: false
Postgres:
  ServiceName: postgres
  Image: postgres:14.5-alpine
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  AdminPassword: notset
  OpenNMSPassword: notset
  KeycloakPassword: notset
  InventoryPassword: notset
  AlertPassword: notset
  EventsPassword: notset
  DataChoicesPassword: notset
  MinionGatewayPassword: notset
  NotificationPassword: notset
  GrafanaPassword: notset
  VolumeSize: 10Gi
Keycloak:
  Path: /auth
  Image: opennms/horizon-stream-keycloak:latest
  ImagePullPolicy: IfNotPresent
  Port: 8080
  HttpsPort: 8443
  HostnamePort: ~
  HostnameAdminUrl: ~
  Replicas: 1
  ServiceName: onms-keycloak
  Resources:
    Limits:
      Cpu: "1"
      Memory: 1000Mi
    Requests:
      Cpu: 100m
      Memory: 500Mi
  AdminUsername: admin
  AdminPassword: notset
  RealmName: opennms
  DynamicRealmConfig: true
  PrivateRepoEnabled: false
  ConfigmapName: keycloak-realm-configmap
  IngressAnnotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff";
      add_header X-Frame-Options "sameorigin";
      add_header server_tokens "off";
    nginx.ingress.kubernetes.io/client-body-buffer-size: 4k
    nginx.ingress.kubernetes.io/client-header-buffer-size: 4k
    nginx.ingress.kubernetes.io/large-client-header-buffers: 4 16k
    nginx.ingress.kubernetes.io/proxy-body-size: 4m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 6k
Grafana:
  Enabled: true
  Path: /grafana
  Port: 3000
  Replicas: 1
  ServiceName: grafana
  Image: opennms/horizon-stream-grafana
  ImagePullPolicy: IfNotPresent
  InitContainerImage: busybox
  Resources:
    Limits:
      Cpu: 500m
      Memory: 1Gi
    Requests:
      Cpu: 100m
      Memory: 100Mi
Cortex:
  ServiceName: cortex
  Port: 9000
  Image: cortexproject/cortex:v1.14.0
  Resources:
    Limits:
      Cpu: "1"
      Memory: 512Mi
    Requests:
      Cpu: 100m
      Memory: 100Mi
Kafka:
  ServiceName: onms-kafka
  Image: bitnami/kafka:3.3.1-debian-11-r1
  ImagePullPolicy: IfNotPresent
  Replicas: 1 
  Port: 9092
  ControllerPort: 9093
  LocalPort: 59092
  Resources:
    Limits:
      Cpu: "2"
      Memory: 2Gi
    Requests:
      Cpu: 500m
      Memory: 512Mi
  VolumeSize: 10Gi
MailServer:
  ServiceName: mail-server
  Image: mailhog/mailhog:v1.0.1
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  Port: 8025
  SmtpPort: 1025
  Resources:
    Limits:
      Cpu: 100m
      Memory: 200Mi
    Requests:
      Cpu: 100m
      Memory: 100Mi
NodeRestrictions: # will be applied to every pod in the instance
  Enabled: false
  Key: kubernetes.azure.com/scalesetpriority
  Value: spot
TLS:
  Enabled: true
  Issuer:
    IssuerServer: https://acme-v02.api.letsencrypt.org/directory
    IssuerUserEmail: email@address.com
  Cert:
    Hostname: "*.wildcard.domain.com"
    Name: tls-cert-wildcard
  # Configure according to: https://cert-manager.io/docs/configuration/acme/dns01/
  Solver: |
    cloudDNS:
      project: my-project
      serviceAccountSecretRef:
        name: prod-clouddns-svc-acct-secret
        key: service-account.json

Ingress:
  Enabled: true
  HttpPort: 80
  HttpsPort: 443
  ControllerImage: registry.k8s.io/ingress-nginx/controller:v1.3.0@sha256:d1707ca76d3b044ab8a28277a2466a02100ee9f58a86af1535a3edf9323ea1b5
  SecretJobImage: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
  WebhookPatchJobImage: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660

CustomErrors:
  Image: quay.io/kubernetes-ingress-controller/custom-error-pages:0.4
  Debug: true

Prometheus:
  Enabled: true
  Path: /prometheus
  ServiceName: prometheus
  Port: 9090
  Image: prom/prometheus:v2.39.1
  ImagePullPolicy: IfNotPresent
  Replicas: 1
  Resources:
    Limits:
      Cpu: "1"
      Memory: 512Mi
    Requests:
      Cpu: 100m
      Memory: 100Mi
